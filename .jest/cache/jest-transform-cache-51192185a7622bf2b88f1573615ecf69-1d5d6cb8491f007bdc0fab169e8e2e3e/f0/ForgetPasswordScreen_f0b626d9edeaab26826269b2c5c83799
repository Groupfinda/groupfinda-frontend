41c4c333fe427547d6848ebc247ebf2e
"use strict";

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var react_1 = __importDefault(require("react"));

var components_1 = require("@ui-kitten/components");

var react_native_1 = require("react-native");

var Auth_1 = require("../components/Auth");

var react_native_2 = require("react-native");

var ForgetPasswordScreen = function ForgetPasswordScreen(_a) {
  var navigation = _a.navigation;
  return React.createElement(components_1.Layout, {
    style: styles.wrapperStyle
  }, React.createElement(react_native_2.ScrollView, null, React.createElement(components_1.Layout, {
    style: styles.containerStyle
  }, React.createElement(components_1.Layout, {
    style: styles.headerStyle
  }, React.createElement(components_1.Text, {
    style: styles.textStyle,
    category: "h3"
  }, "Forgot your password?"), React.createElement(components_1.Text, {
    category: "s1",
    appearance: "hint"
  }, "Tell us your username and email and we will reset it for you.")), React.createElement(Auth_1.ForgetPasswordForm, null))));
};

var styles = react_native_1.StyleSheet.create({
  wrapperStyle: {
    flex: 1
  },
  containerStyle: {
    flex: 1,
    alignItems: "center",
    paddingHorizontal: 40
  },
  headerStyle: {
    alignSelf: "center",
    marginTop: 40,
    marginBottom: 60
  },
  textStyle: {
    alignSelf: "center"
  }
});
exports.default = ForgetPasswordScreen;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcdXNlclxcRGVza3RvcFxcZ3JvdXBmaW5kYS1hcHBcXGdyb3VwZmluZGEtZnJvbnRlbmRcXHNyY1xcc2NyZWVuc1xcRm9yZ2V0UGFzc3dvcmRTY3JlZW4udHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBLElBQUEsT0FBQSxHQUFBLGVBQUEsQ0FBQSxPQUFBLENBQUEsT0FBQSxDQUFBLENBQUE7O0FBQ0EsSUFBQSxZQUFBLEdBQUEsT0FBQSxDQUFBLHVCQUFBLENBQUE7O0FBQ0EsSUFBQSxjQUFBLEdBQUEsT0FBQSxDQUFBLGNBQUEsQ0FBQTs7QUFDQSxJQUFBLE1BQUEsR0FBQSxPQUFBLHNCQUFBOztBQUNBLElBQUEsY0FBQSxHQUFBLE9BQUEsQ0FBQSxjQUFBLENBQUE7O0FBS0EsSUFBTSxvQkFBb0IsR0FBb0IsU0FBeEMsb0JBQXdDLENBQUMsRUFBRCxFQUFlO01BQVosVUFBQSxHQUFBLEVBQUEsQ0FBQSxVO0FBQy9DLFNBQ0Usb0JBQUMsWUFBRCxDQUFDLE1BQUQ7QUFBUSxJQUFBLEtBQUssRUFBRSxNQUFNLENBQUM7QUFBdEIsS0FDRSxvQkFBQyxjQUFELENBQUMsVUFBRCxRQUNFLG9CQUFDLFlBQUQsQ0FBQyxNQUFEO0FBQVEsSUFBQSxLQUFLLEVBQUUsTUFBTSxDQUFDO0FBQXRCLEtBQ0Usb0JBQUMsWUFBRCxDQUFDLE1BQUQ7QUFBUSxJQUFBLEtBQUssRUFBRSxNQUFNLENBQUM7QUFBdEIsS0FDRSxvQkFBQyxZQUFELENBQUMsSUFBRDtBQUFNLElBQUEsS0FBSyxFQUFFLE1BQU0sQ0FBQyxTQUFwQjtBQUErQixJQUFBLFFBQVEsRUFBQztBQUF4Qyw2QkFERixFQUlFLG9CQUFDLFlBQUQsQ0FBQyxJQUFEO0FBQU0sSUFBQSxRQUFRLEVBQUMsSUFBZjtBQUFvQixJQUFBLFVBQVUsRUFBQztBQUEvQixxRUFKRixDQURGLEVBU0Usb0JBQUMsTUFBRCxDQUFDLGtCQUFELE9BVEYsQ0FERixDQURGLENBREY7QUFpQkQsQ0FsQkQ7O0FBb0JBLElBQU0sTUFBTSxHQUFHLGNBQUEsQ0FBQSxVQUFBLENBQVcsTUFBWCxDQUFrQjtBQUMvQixFQUFBLFlBQVksRUFBRTtBQUNaLElBQUEsSUFBSSxFQUFFO0FBRE0sR0FEaUI7QUFJL0IsRUFBQSxjQUFjLEVBQUU7QUFDZCxJQUFBLElBQUksRUFBRSxDQURRO0FBRWQsSUFBQSxVQUFVLEVBQUUsUUFGRTtBQUdkLElBQUEsaUJBQWlCLEVBQUU7QUFITCxHQUplO0FBUy9CLEVBQUEsV0FBVyxFQUFFO0FBQ1gsSUFBQSxTQUFTLEVBQUUsUUFEQTtBQUVYLElBQUEsU0FBUyxFQUFFLEVBRkE7QUFHWCxJQUFBLFlBQVksRUFBRTtBQUhILEdBVGtCO0FBZS9CLEVBQUEsU0FBUyxFQUFFO0FBQ1QsSUFBQSxTQUFTLEVBQUU7QUFERjtBQWZvQixDQUFsQixDQUFmO0FBb0JBLE9BQUEsQ0FBQSxPQUFBLEdBQWUsb0JBQWYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IExheW91dCwgVGV4dCB9IGZyb20gXCJAdWkta2l0dGVuL2NvbXBvbmVudHNcIjtcclxuaW1wb3J0IHsgU3R5bGVTaGVldCB9IGZyb20gXCJyZWFjdC1uYXRpdmVcIjtcclxuaW1wb3J0IHsgRm9yZ2V0UGFzc3dvcmRGb3JtIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvQXV0aFwiO1xyXG5pbXBvcnQgeyBTY3JvbGxWaWV3IH0gZnJvbSBcInJlYWN0LW5hdGl2ZVwiO1xyXG5pbXBvcnQgeyBGb3JnZXRQYXNzd29yZFNjcmVlbk5hdmlnYXRpb25Qcm9wIH0gZnJvbSBcIi4uL25hdmlnYXRpb24vdHlwZXNcIjtcclxuXHJcbnR5cGUgUHJvcHMgPSBGb3JnZXRQYXNzd29yZFNjcmVlbk5hdmlnYXRpb25Qcm9wO1xyXG5cclxuY29uc3QgRm9yZ2V0UGFzc3dvcmRTY3JlZW46IFJlYWN0LkZDPFByb3BzPiA9ICh7IG5hdmlnYXRpb24gfSkgPT4ge1xyXG4gIHJldHVybiAoXHJcbiAgICA8TGF5b3V0IHN0eWxlPXtzdHlsZXMud3JhcHBlclN0eWxlfT5cclxuICAgICAgPFNjcm9sbFZpZXc+XHJcbiAgICAgICAgPExheW91dCBzdHlsZT17c3R5bGVzLmNvbnRhaW5lclN0eWxlfT5cclxuICAgICAgICAgIDxMYXlvdXQgc3R5bGU9e3N0eWxlcy5oZWFkZXJTdHlsZX0+XHJcbiAgICAgICAgICAgIDxUZXh0IHN0eWxlPXtzdHlsZXMudGV4dFN0eWxlfSBjYXRlZ29yeT1cImgzXCI+XHJcbiAgICAgICAgICAgICAgRm9yZ290IHlvdXIgcGFzc3dvcmQ/XHJcbiAgICAgICAgICAgIDwvVGV4dD5cclxuICAgICAgICAgICAgPFRleHQgY2F0ZWdvcnk9XCJzMVwiIGFwcGVhcmFuY2U9XCJoaW50XCI+XHJcbiAgICAgICAgICAgICAgVGVsbCB1cyB5b3VyIHVzZXJuYW1lIGFuZCBlbWFpbCBhbmQgd2Ugd2lsbCByZXNldCBpdCBmb3IgeW91LlxyXG4gICAgICAgICAgICA8L1RleHQ+XHJcbiAgICAgICAgICA8L0xheW91dD5cclxuICAgICAgICAgIDxGb3JnZXRQYXNzd29yZEZvcm0gLz5cclxuICAgICAgICA8L0xheW91dD5cclxuICAgICAgPC9TY3JvbGxWaWV3PlxyXG4gICAgPC9MYXlvdXQ+XHJcbiAgKTtcclxufTtcclxuXHJcbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcclxuICB3cmFwcGVyU3R5bGU6IHtcclxuICAgIGZsZXg6IDEsXHJcbiAgfSxcclxuICBjb250YWluZXJTdHlsZToge1xyXG4gICAgZmxleDogMSxcclxuICAgIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXHJcbiAgICBwYWRkaW5nSG9yaXpvbnRhbDogNDAsXHJcbiAgfSxcclxuICBoZWFkZXJTdHlsZToge1xyXG4gICAgYWxpZ25TZWxmOiBcImNlbnRlclwiLFxyXG4gICAgbWFyZ2luVG9wOiA0MCxcclxuICAgIG1hcmdpbkJvdHRvbTogNjAsXHJcbiAgfSxcclxuXHJcbiAgdGV4dFN0eWxlOiB7XHJcbiAgICBhbGlnblNlbGY6IFwiY2VudGVyXCIsXHJcbiAgfSxcclxufSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBGb3JnZXRQYXNzd29yZFNjcmVlbjtcclxuIl19